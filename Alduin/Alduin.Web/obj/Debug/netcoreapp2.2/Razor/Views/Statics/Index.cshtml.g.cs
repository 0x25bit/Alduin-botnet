#pragma checksum "E:\project\Alduin-botnet\Alduin\Alduin.Web\Views\Statics\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d4203c7648e7435eb9331c31a88527ce5ad6db12"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Statics_Index), @"mvc.1.0.view", @"/Views/Statics/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Statics/Index.cshtml", typeof(AspNetCore.Views_Statics_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\project\Alduin-botnet\Alduin\Alduin.Web\Views\_ViewImports.cshtml"
using Alduin.Web;

#line default
#line hidden
#line 2 "E:\project\Alduin-botnet\Alduin\Alduin.Web\Views\_ViewImports.cshtml"
using Alduin.Web.Models;

#line default
#line hidden
#line 4 "E:\project\Alduin-botnet\Alduin\Alduin.Web\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d4203c7648e7435eb9331c31a88527ce5ad6db12", @"/Views/Statics/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df02d679023bc56e9cc697f1d66d605b9a4371f2", @"/Views/_ViewImports.cshtml")]
    public class Views_Statics_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/CountryClass.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\project\Alduin-botnet\Alduin\Alduin.Web\Views\Statics\Index.cshtml"
  
    ViewData["Title"] = Localizer["Statistics"];

#line default
#line hidden
            BeginContext(57, 234, true);
            WriteLiteral("\r\n<div class=\"contatiner d-flex justify-content-center\">\r\n    <div class=\"row\">\r\n        <div class=\"invitation-board\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <h1 class=\"text-center\">");
            EndContext();
            BeginContext(292, 23, false);
#line 10 "E:\project\Alduin-botnet\Alduin\Alduin.Web\Views\Statics\Index.cshtml"
                                       Write(Localizer["Statistics"]);

#line default
#line hidden
            EndContext();
            BeginContext(315, 581, true);
            WriteLiteral(@"</h1>
                    <hr />
                </div>
            </div>
            <div class=""row"">
                <div class=""col-12"">
                    <div id=""GeoMap"" class=""Large-chart""></div>
                </div>
            </div>
            <hr />
            <div class=""row"">
                <div class=""col-6"">
                    <div id=""piechart"" class=""Small-chart""></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js""></script>
");
            EndContext();
            BeginContext(896, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4203c7648e7435eb9331c31a88527ce5ad6db125441", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(947, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(949, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4203c7648e7435eb9331c31a88527ce5ad6db126618", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(993, 3311, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    function geoMap(country) {
        google.charts.load('current', {
            'packages': ['geochart'],
            // Note: you will need to get a mapsApiKey for your project.
            // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings
            'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY'
        });
        google.charts.setOnLoadCallback(drawRegionsMap);

        function drawRegionsMap() {
            var CArray = [['Country', 'Popularity']];
            for (var i = 0; i < country.length; i++) {
                    var Citem = [country[i].getCountry, country[i].getPiece];
                    CArray.push(Citem);
             }

            var data = google.visualization.arrayToDataTable(CArray);

            var options = {
                defaultColor: '#7e7f80',
                colorAxis: { colors: ['#666769', '#15A0BF'] },
                backgroundColor: 'transparent'
            };");
            WriteLiteral(@"

            var chart = new google.visualization.GeoChart(document.getElementById('GeoMap'));

            chart.draw(data, options);
        }
    }
    function setMap(data) {
        var country = [];
        var vot = false;
        for (var i = 0; i < data.length; i++) {
            for (var j = 0; j < country.length; j++) {
                if (country[j].Country == data[i].countryCode) {
                    console.log(""true"");
                    vot = true;
                    country[j].setPiece = parseInt(country[j].getPiece) + 1;
                    break;
                }
            }
            if(!vot){
                country.push(new Country(data[i].countryCode, 1));
                vot = false;
            }
        }
        geoMap(country);
    }
    function statusPieChart() {
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {

            var data = go");
            WriteLiteral(@"ogle.visualization.arrayToDataTable([
                ['Online', 0],
                ['Offline', 0]
            ]);

            var options = {
                title: 'Status',
                backgroundColor: 'transparent',
                titleTextStyle: {
                    color: 'white'
                },
                tooltip: {
                    textStyle: { color: 'black' },
                },
                pieSliceTextStyle: {
                    color: 'white'
                },
                legend: {
                    textStyle: {
                        color: 'white'
                    }
                }
            };

            var chart = new google.visualization.PieChart(document.getElementById('piechart'));

            chart.draw(data, options);
        }
    }
    function BotStatus(data){
        console.log(data);
    }
    $(document).ready(function () {
        BotList();
    });
    function BotList() {
        $.ajax({
           ");
            WriteLiteral(" type: \'GET\',\r\n            url: \'/Statics/BotList\',\r\n            dataType: \'json\',\r\n            success: function (data) {\r\n                setMap(data);\r\n                BotStatus(data);\r\n            }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
